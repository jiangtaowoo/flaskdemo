# -*- coding: utf-8 -*-
SHARED_STYLE:
  MAP_STYLE:
    POSP:
      match:
        adj: "<b class='label label-warning'>{0}</b>"
        "adj.": "<b class='label label-warning'>{0}</b>"
        "形容词": "<b class='label label-warning'>{0}</b>"
        "adj-graded": "<b class='label label-warning'>{0}</b>"
        adv: "<b class='label label-info'>{0}</b>"
        "adv.": "<b class='label label-info'>{0}</b>"
        "副词": "<b class='label label-info'>{0}</b>"
        n: "<b class='label label-danger'>{0}</b>"
        noun: "<b class='label label-danger'>{0}</b>"
        "n.": "<b class='label label-danger'>{0}</b>"
        "名词": "<b class='label label-danger'>{0}</b>"
        "n-uncount": "<b class='label label-danger'>{0}</b>"
        "n-count": "<b class='label label-danger'>{0}</b>"
        "n-sing": "<b class='label label-danger'>{0}</b>"
        "n-plural": "<b class='label label-danger'>{0}</b>"
        "n-var": "<b class='label label-danger'>{0}</b>"
        v: "<b class='label label-success'>{0}</b>"
        "v.": "<b class='label label-success'>{0}</b>"
        vi: "<b class='label label-success'>{0}</b>"
        "vi.": "<b class='label label-success'>{0}</b>"
        vt: "<b class='label label-success'>{0}</b>"
        "vt.": "<b class='label label-success'>{0}</b>"
        "动词": "<b class='label label-success'>{0}</b>"
        verb: "<b class='label label-success'>{0}</b>"
        "vt.& vi.": "<b class='label label-success'>{0}</b>"
        "vt.&vi.": "<b class='label label-success'>{0}</b>"
        "vi.& vt.": "<b class='label label-success'>{0}</b>"
        "vi.&vt.": "<b class='label label-success'>{0}</b>"
      except: "<b class='label label-default'>{0}</b>"
  RAW_STYLE:
    HTML_LINE_AFTER: "{0}<br>"
    HTML_LINE_BEFORE: "<br>{0}"
    HTML_LINE_BEFOREAFTER: "<br>{0}<br>"
    HTML_SPACE_BEFORE: "&nbsp;{0}"
    HTML_SPACE_AFTER: "{0}&nbsp;"
    HTML_HR: "{0}<hr>"
    HTML_DICT_HEADER: "<span class='section-header'>{0}</span>"
    HTML_BOLD: "<b>{0}</b>"
    HTML_BOLD_LINE_BEFORE: "<br><b>{0}</b>"
    HTML_BOLD_LINE_AFTER: "<b>{0}</b><br>"
    HTML_ITALIC: "<i>{0}</i>"
    HTML_BOLD_RED: "<b style='color:red'>{0}</b>"
    HTML_BOOTSTRAP_DIV: "<div class='container-fluid'>{0}</div>"
    HTML_BOOTSTRAP_DIV_LEFT: "<div class='container-fluid'>{0}"
    HTML_BOOTSTRAP_DIV_RIGHT: " {0}</div>"
    HTML_BOOTSTRAP_PANEL_TITLE: "<div class='panel panel-warning'><div class='panel-heading'><h4 class='panel-title text-center'><a data-toggle='collapse' href='#collapse1'>{0}</a></h4></div></div>"
    HTML_BOOTSTRAP_PANEL_1: "<div class='panel panel-warning'>{0}</div>"
    HTML_BOOTSTRAP_PANEL_TITLE_1: "<div class='panel-heading'><h4 class='panel-title text-center'><a data-toggle='collapse' href='#collapse1'>{0}</a></h4></div>"
    HTML_BOOTSTRAP_PANEL_BODY_1: <div id='collapse1' class='panel-collapse collapse'><div class='panel-body'>{0}</div></div>"
    HTML_BOOTSTRAP_PANEL_FORDICT: "<div class='panel panel-success'><div class='panel-heading'><h3 class='panel-title'>{0}</h3></div></div>"
    HTML_FRONT_SIDE: "<div class='render-front-side'>{0}</div>"
SCHEMAS:
  database_raw:
    SEGMENTS:
      front:
        highlight: null
        template: null
      audio:
        highlight: null
        template: null
      posp:
        highlight: null
        template: null
      basic:
        highlight: null
        template: null
      transform:
        highlight: null
        template: null
      tag:
        highlight: null
        template: null
      stat:
        highlight: null
        template: null
      mean:
        highlight: null
        template: null
      vocabulary:
        highlight: null
        template: null
      oxford:
        highlight: null
        template: null
      collins:
        highlight: null
        template: null
      enmeans:
        highlight: null
        template: null
  html_card:
    TEMPLATES:
      T_BASIC:
        bracket: "<div class='render-part-basic'>{0}</div>"
        datatype: dict
        style:
          order: ["wordem", "audio", "ph_am", "ph_en", "mean"]
          delimiter: " "
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              wordem: {"type": "raw", "data": "<span class='render-part-basic-wordem'>{0}</span>"}
              audio: {"type": "template", "data": "TEMPLATES.T_AUDIO"}
              ph_am: {"type": "raw", "data": "<span class='render-part-basic-phonetic'><span class='render-phonetic-name'>美</span>[{0}]</span>"}
              ph_en: {"type": "raw", "data": "<span class='render-part-basic-phonetic'><span class='render-phonetic-name'>英</span>[{0}]</span>"}
              mean: {"type": "raw", "data": "<span class='render-part-basic-mean'>{0}</span>"}
      T_POSP:
        bracket: "<div class='render-part-posp'>{0}</div>"
        datatype: list
        style:
          delimiter: " "
          format: {"type": "style", "data": "SHARED_STYLE.MAP_STYLE.POSP"}
      T_AUDIO:
        bracket: "<span class='render-part-audio'>{0}</span>"
        datatype: dict
        style:
          order: null
          delimiter: ""
          kvconnector: "<audio id='{0}' src='{1}' preload='none'></audio><a class='audio fa fa-volume-up' aria-hidden='true' onclick=\"document.getElementById('{0}').play()\"></a>"
          use: kv
          format: null
      T_TAG:
        bracket: "<div class='render-part-tag'>{0}</div>"
        datatype: list
        style:
          delimiter: " "
          format: {"type": "raw", "data": "<span class='render-part-tag-item'>{0}</span>"}
      T_TRANSFORM:
        bracket: "<div class='render-part-transform'>{0}</div>"
        datatype: dict
        style:
          order: ["word_pl", "word_er", "word_third", "word_past", "word_done", "word_ing", "word_est"]
          delimiter: " "
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              word_third: {"type": "raw", "data": "<span class='render-part-transform-item'><span class='render-transform-name'>第三人称单数:</span>{0}</span>"}
              word_done: {"type": "raw", "data": "<span class='render-part-transform-item'><span class='render-transform-name'>过去分词:</span>{0}</span>"}
              word_pl: {"type": "raw", "data": "<span class='render-part-transform-item'><span class='render-transform-name'>复数:</span>{0}</span>"}
              word_est: {"type": "raw", "data": "<span class='render-part-transform-item'><span class='render-transform-name'>最高级:</span>{0}</span>"}
              word_ing: {"type": "raw", "data": "<span class='render-part-transform-item'><span class='render-transform-name'>现在分词:</span>{0}</span>"}
              word_er: {"type": "raw", "data": "<span class='render-part-transform-item'><span class='render-transform-name'>ER:</span>{0}</span>"}
              word_past: {"type": "raw", "data": "<span class='render-part-transform-item'><span class='render-transform-name'>过去式:</span>{0}</span>"}
      T_MEAN:
        bracket: "<div class='render-part-mean'>{0}</div>"  #[{posp: xx, means:[a, b, c]}, {}]
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_MEAN_L0"}
      T_MEAN_L0:
        bracket: "<span class='render-part-mean-item'>{0}</span>"
        datatype: dict
        style:
          order: ["posp", "means"]
          delimiter: " "
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              posp: {"type": "style", "data": "SHARED_STYLE.MAP_STYLE.POSP"}
              means: {"type": "template", "data": "TEMPLATES.T_MEAN_L1"}
      T_MEAN_L1:
        bracket: "<span class='render-part-mean-item-data'>{0}</span>"  #[a, b, c]
        datatype: list
        style:
          delimiter: "; "
          format: {"type": "raw", "data": "{0}"}
      T_STAT:
        bracket: "<div class='render-part-stat'>{0}</div>"
        datatype: dict
        style:
          order: ["basic", "posp"]
          delimiter: " "
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              basic: {"type": "template", "data": "TEMPLATES.T_STAT_LB0"}
              posp: {"type": "template", "data": "TEMPLATES.T_STAT_LP0"}
      T_STAT_LB0:
        bracket: "<span class='render-part-stat-basic'>{0}</span>"
        datatype: dict
        style:
          order: null
          delimiter: " "
          kvconnector: "{1}"
          use: kv
          format:
            type: inline
            data:
              key: null
              value: {"type": "template", "data": "TEMPLATES.T_STAT_LB1"}
      T_STAT_LB1:
        bracket: ""
        datatype: dict
        style:
          order: ['sense', 'percent']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              sense: {"type": "raw", "data": "<span class='render-part-stat-basic-sense'>{0}</span>"}
              percent: {"type": "raw", "data": "<span class='render-part-stat-basic-percent'>({0}%)</span>"}
      T_STAT_LP0:
        bracket: "<span class='render-part-stat-posp'>{0}</span>"
        datatype: dict
        style:
          order: null
          delimiter: " "
          kvconnector: "{1}"
          use: kv
          format:
            type: inline
            data:
              key: null
              value: {"type": "template", "data": "TEMPLATES.T_STAT_LP1"}
      T_STAT_LP1:
        bracket: ""
        datatype: dict
        style:
          order: ['pos', 'percent']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              pos: {"type": "raw", "data": "<span class='render-part-stat-posp-pos'>{0}</span>"}
              percent: {"type": "raw", "data": "<span class='render-part-stat-posp-percent'>({0}%)</span>"}
      T_VOCABULARY:
        bracket: "<span class='render-part-vocabulary-container'>{0}</span>"
        datatype: dict
        style:
          order: ['dictname', 'dictcontent']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              dictname: {"type": "raw", "data": "<div class='render-part-dictname'>{0}</div>"}
              dictcontent: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_L0"}
      T_VOCABULARY_L0:
        bracket: "<span class='render-part-vocabulary-details'>{0}</span>"
        datatype: dict
        style:
          order: ['main', 'definition', 'definition_brief']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              main: {"type": "raw", "data": "<span class='render-part-vocabulary-main'>{0}</span>"}
              definition: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_DEFINITION"}
              definition_brief: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_DEFINITION_BRIEF"}
      T_VOCABULARY_DEFINITION_BRIEF:
        bracket: "<span class='render-part-vocabulary-brief'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_BRIEF_ITEM"}
      T_VOCABULARY_BRIEF_ITEM:
        bracket: "<span class='render-part-vocabulary-brief-item'>{0}</span>"
        datatype: dict
        style:
          order: ['posp', 'definition']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              posp: {"type": "style", "data": "SHARED_STYLE.MAP_STYLE.POSP"}
              definition: {"type": "raw", "data": "<span class='render-part-vocabulary-brief-item-def'>{0}</span>"}
      T_VOCABULARY_DEFINITION:
        bracket: "<span class='render-part-vocabulary-def'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_DEFINITION_ITEM"}
      T_VOCABULARY_DEFINITION_ITEM:
        bracket: "<span class='render-part-vocabulary-def-item'>{0}</span>"
        datatype: dict
        style:
          order: ['posp', 'definition', 'defcontent']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              posp: {"type": "style", "data": "SHARED_STYLE.MAP_STYLE.POSP"}
              definition: {"type": "raw", "data": "<span class='render-part-vocabulary-def-item-def'>{0}</span>"}
              defcontent: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_DEFINITION_DEFCONTENT"}
      T_VOCABULARY_DEFINITION_DEFCONTENT:
        bracket: ""
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_DEFINITION_DEFCONTENT_ITEM"}
      T_VOCABULARY_DEFINITION_DEFCONTENT_ITEM:
        bracket: "<span class='render-part-vocabulary-def-item-def-contentitem'>{0}</span>"
        datatype: dict
        style:
          order: ['dt', 'dd']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              dt: {"type": "raw", "data": "<span class='render-part-vocabulary-content-dt'>{0}</span>"}
              dd: {"type": "template", "data": "TEMPLATES.T_VOCABULARY_DEFINITION_DEFCONTENT_ITEM_DD"}
      T_VOCABULARY_DEFINITION_DEFCONTENT_ITEM_DD:
        bracket: ""
        datatype: list
        style:
          delimiter: ""
          format: {"type": "raw", "data": "<span class='render-part-vocabulary-content-dd'>{0}</span>"}
      T_OXFORD:
        bracket: "<span class='render-part-oxford-container'>{0}</span>"
        datatype: dict
        style:
          order: ['dictname', 'dictcontent']    #[{posp:verb, means:[{en,zh},{en,zh}], examples:[{en,zh},{en,zh}]},{},...]
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              dictname: {"type": "raw", "data": "<div class='render-part-dictname'>{0}</div>"}
              dictcontent: {"type": "template", "data": "TEMPLATES.T_OXFORD_L0"}
      T_OXFORD_L0:
        bracket: "<span class='render-part-oxford-details'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_OXFORD_L1"}
      T_OXFORD_L1:
        bracket: "<span class='render-part-oxford-item'>{0}</span>"
        datatype: dict  #{posp:verb, means:[{en,zh},{en,zh}], examples:[{en,zh},{en,zh}]}
        style:
          order: ['posp', 'means', 'examples']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              posp: {"type": "style", "data": "SHARED_STYLE.MAP_STYLE.POSP"}
              means: {"type": "template", "data": "TEMPLATES.T_OXFORD_L2_DEF"}
              examples: {"type": "template", "data": "TEMPLATES.T_OXFORD_L2_EXAMPLE"}
      T_OXFORD_L2_DEF:
        bracket: "<span class='render-part-oxford-item-def'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_OXFORD_L2_DEF_ITEM"}
      T_OXFORD_L2_DEF_ITEM:
        bracket: "<span class='render-part-oxford-item-def-enzh'>{0}</span>"
        datatype: dict  #{en,zh}
        style:
          order: ['en', 'zh']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              en: {"type": "raw", "data": "<span class='render-part-oxford-item-def-enzh-en'>{0}</span>"}
              zh: {"type": "raw", "data": "<span class='render-part-oxford-item-def-enzh-zh'>{0}</span>"}
      T_OXFORD_L2_EXAMPLE:
        bracket: "<span class='render-part-oxford-item-x'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_OXFORD_L2_EXAMPLE_ITEM"}
      T_OXFORD_L2_EXAMPLE_ITEM:
        bracket: "<span class='render-part-oxford-item-x-enzh'>{0}</span>"
        datatype: dict  #{en,zh}
        style:
          order: ['en', 'zh']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              en: {"type": "raw", "data": "<span class='render-part-oxford-item-x-enzh-en'>{0}</span>"}
              zh: {"type": "raw", "data": "<span class='render-part-oxford-item-x-enzh-zh'>{0}</span>"}
      T_COLLINS:
        bracket: "<span class='render-part-collins-container'>{0}</span>"
        datatype: dict
        style:
          order: ['dictname', 'dictcontent']    #[{posp:verb, means:[{en,zh},{en,zh}], examples:[{en,zh},{en,zh}]},{},...]
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              dictname: {"type": "raw", "data": "<div class='render-part-dictname'>{0}</div>"}
              dictcontent: {"type": "template", "data": "TEMPLATES.T_COLLINS_L0"}
      T_COLLINS_L0:
        bracket: "<span class='render-part-collins-details'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_COLLINS_L1"}
      T_COLLINS_L1:
        bracket: "<span class='render-part-collins-item'>{0}</span>"
        datatype: dict  #{posp:verb, means:[{en,zh},{en,zh}], examples:[{en,zh},{en,zh}]}
        style:
          order: ['posp', 'means', 'examples']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              posp: {"type": "style", "data": "SHARED_STYLE.MAP_STYLE.POSP"}
              means: {"type": "template", "data": "TEMPLATES.T_COLLINS_L2_DEF"}
              examples: {"type": "template", "data": "TEMPLATES.T_COLLINS_L2_EXAMPLE"}
      T_COLLINS_L2_DEF:
        bracket: "<span class='render-part-collins-item-def'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_COLLINS_L2_DEF_ITEM"}
      T_COLLINS_L2_DEF_ITEM:
        bracket: "<span class='render-part-collins-item-def-enzh'>{0}</span>"
        datatype: dict  #{en,zh}
        style:
          order: ['en', 'zh']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              en: {"type": "raw", "data": "<span class='render-part-collins-item-def-enzh-en'>{0}</span>"}
              zh: {"type": "raw", "data": "<span class='render-part-collins-item-def-enzh-zh'>{0}</span>"}
      T_COLLINS_L2_EXAMPLE:
        bracket: "<span class='render-part-collins-item-x'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_COLLINS_L2_EXAMPLE_ITEM"}
      T_COLLINS_L2_EXAMPLE_ITEM:
        bracket: "<span class='render-part-collins-item-x-enzh'>{0}</span>"
        datatype: dict  #{en,zh}
        style:
          order: ['en', 'zh']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              en: {"type": "raw", "data": "<span class='render-part-collins-item-x-enzh-en'>{0}</span>"}
              zh: {"type": "raw", "data": "<span class='render-part-collins-item-x-enzh-zh'>{0}</span>"}
      T_ENMEANS:
        bracket: "<span class='render-part-enmeans-container'>{0}</span>"
        datatype: dict
        style:
          order: ['dictname', 'dictcontent']    #[{posp:verb, means:[{en,zh},{en,zh}], examples:[{en,zh},{en,zh}]},{},...]
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              dictname: {"type": "raw", "data": "<div class='render-part-dictname'>{0}</div>"}
              dictcontent: {"type": "template", "data": "TEMPLATES.T_ENMEANS_L0"}
      T_ENMEANS_L0:
        bracket: "<span class='render-part-enmeans-details'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "template", "data": "TEMPLATES.T_ENMEANS_L1"}
      T_ENMEANS_L1:
        bracket: "<span class='render-part-enmeans-item'>{0}</span>"
        datatype: dict  #{posp:verb, means:[en,,en], examples:[en,en]}
        style:
          order: ['posp', 'means', 'examples']
          delimiter: ""
          kvconnector: null
          use: v
          format:
            type: inline
            data:
              posp: {"type": "style", "data": "SHARED_STYLE.MAP_STYLE.POSP"}
              means: {"type": "template", "data": "TEMPLATES.T_ENMEANS_L2_DEF"}
              examples: {"type": "template", "data": "TEMPLATES.T_ENMEANS_L2_EXAMPLE"}
      T_ENMEANS_L2_DEF:
        bracket: "<span class='render-part-enmeans-item-def'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "raw", "data": "<span class='render-part-enmeans-item-def-en'>{0}</span>"}
      T_ENMEANS_L2_EXAMPLE:
        bracket: "<span class='render-part-enmeans-item-x'>{0}</span>"
        datatype: list
        style:
          delimiter: ""
          format: {"type": "raw", "data": "<span class='render-part-enmeans-item-x-en'>{0}</span>"}
    SEGMENTS:
      front:
        highlight: null
        template: {"type": "style", "data": "SHARED_STYLE.RAW_STYLE.HTML_FRONT_SIDE"}
      basic:
        highlight: null
        template: {"type": "template", "data": "TEMPLATES.T_BASIC"}
      posp:
        highlight: null
        template: {"type": "template", "data": "TEMPLATES.T_POSP"}
      audio:
        highlight: null
        template: {"type": "template", "data": "TEMPLATES.T_AUDIO"}
      tag:
        highlight: null
        template: {"type": "template", "data": "TEMPLATES.T_TAG"}
      transform:
        highlight: null
        template: {"type": "template", "data": "TEMPLATES.T_TRANSFORM"}
      mean:
        highlight: null
        template: {"type": "template", "data": "TEMPLATES.T_MEAN"}
      stat:
        highlight: null
        template: {"type": "template", "data": "TEMPLATES.T_STAT"}
      vocabulary:
        highlight: "SHARED_STYLE.RAW_STYLE.HTML_BOLD"
        template: {"type": "template", "data": "TEMPLATES.T_VOCABULARY"}
      oxford:
        highlight: "SHARED_STYLE.RAW_STYLE.HTML_BOLD"
        template: {"type": "template", "data": "TEMPLATES.T_OXFORD"}
      collins:
        highlight: "SHARED_STYLE.RAW_STYLE.HTML_BOLD"
        template: {"type": "template", "data": "TEMPLATES.T_COLLINS"}
      enmeans:
        highlight: "SHARED_STYLE.RAW_STYLE.HTML_BOLD"
        template: {"type": "template", "data": "TEMPLATES.T_ENMEANS"}